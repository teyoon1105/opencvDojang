import cv2
import pyzbar.pyzbar as pyzbar
from playsound import playsound
import os 
# 중복된 qr스캔을 확인하기 위한 데이터 리스트
used_codes = []
# qr 코드로 읽어온 정보를 저장하는 코드
data_list = []

my_dir = os.getcwd()

qr_txt_path = os.path.join(my_dir + "qrbarcode_data.txt")
qr_mp3_path = os.path.join(my_dir + "qrbarcode_beep.mp3")

try:
    # 이미 저장되어 있는 정보가 있을 수 있으니 확인
    f = open(qr_txt_path, "r", encoding="utf8")
    # 있으면 data_list에 한 줄 씩 저장
    data_list = f.readlines()
    # 파일 경로에 파일이 없으면 에러
except FileNotFoundError:
    pass
    # 전부 다 저장했으면 파일 닫기
else:
    f.close()

# 카메라와 연결
cap = cv2.VideoCapture(0)
cap.set(3, 640)
cap.set(4, 480)

# data_list에 저장된 데이터의 개행문자를 제거하고 used_codes 리스트에 저장
for i in data_list:
    used_codes.append(i.rstrip('\n'))

while True:
    # 프레임 읽어오는게 성공했는지, 프레임 을 각각 받아옴
    success, frame = cap.read()

    # 성공했다면
    if success:
        # 프레임 속의 qr 정보가 있다면 인코딩 된 qr 코드를 디코딩 하여 code에 저장
        for code in pyzbar.decode(frame):
            # cv2.imwrite('qrbarcode_image.png', frame)
            # code에 저장된 텍스트 데이터를 utf-8로 디코딩 해서 my_code에 저장
            my_code = code.data.decode('utf-8')
            # used_codes에 없는 qr정보라면
            if my_code not in used_codes:
                # 인식 성공, my_code 속 텍스트 데이터를 출력
                print("인식 성공 : ", my_code)
                # 인식 성공을 알리는 비프음 작동
                playsound(qr_mp3_path)
                # 중복 인식을 방지하기 위해 used_codes에 텍스트 데이터 저장
                used_codes.append(my_code)

                # 사실 필요없을 수도 있는데 다시 시작할 때 try문에서 거르기 위해서
                # data_list에 파일을 저장하는 코드
                f2 = open(qr_txt_path, "a", encoding="utf8")
                f2.write(my_code+'\n')
                f2.close()
            # 인식이 되었던(used_codes에 있는 텍스트 데이터라면)
            elif my_code in used_codes:
                print("이미 인식된 코드 입니다.!!!")
                playsound(qr_mp3_path)
            else:
                pass

        # 찍고 있는 장면을 출력
        cv2.imshow('QRcode Barcode Scan', frame)
        key = cv2.waitKey(1)
        if key == 27:   
            break

# 비디오 출력 종료
cap.release()
cv2.destroyAllWindows
